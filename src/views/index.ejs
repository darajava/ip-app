<%- include('partials/header') %>

<div class="ip-container invisible">
  <%- include('page', { guestbook: guestbook }) -%>
</div>
<button class="my-info">
  <img src="./info.svg" />
</button>

<div class="modal-container fixed hidden">
  <div class="modal">
    <div class="message">
      <h1>About</h1>

      <p>
        Created by Dara Java (<a
          href="https://github.com/darajava"
          target="_blank"
          >Github</a
        >)
      </p>

      <p>
        Building
        <a href="https://audiodiary.ai" target="_blank">Audio Diary</a> solo
      </p>

      <p>
        Donate on
        <a href="https://ko-fi.com/darajava" target="_blank">Ko-fi</a>
      </p>

      <p>
        Email me at <a href="mailto:dara@audiodiary.ai">dara@audiodiary.ai</a>
      </p>
    </div>
  </div>
</div>

<script>
  const flagMap = {
    AF: "Afghanistan",
    AX: "Åland Islands",
    AL: "Albania",
    DZ: "Algeria",
    AS: "American Samoa",
    AD: "Andorra",
    AO: "Angola",
    AI: "Anguilla",
    AQ: "Antarctica",
    AG: "Antigua and Barbuda",
    AR: "Argentina",
    AM: "Armenia",
    AW: "Aruba",
    AU: "Australia",
    AT: "Austria",
    AZ: "Azerbaijan",
    BS: "Bahamas",
    BH: "Bahrain",
    BD: "Bangladesh",
    BB: "Barbados",
    BY: "Belarus",
    BE: "Belgium",
    BZ: "Belize",
    BJ: "Benin",
    BM: "Bermuda",
    BT: "Bhutan",
    BO: "Bolivia",
    BQ: "Bonaire, Sint Eustatius and Saba",
    BA: "Bosnia and Herzegovina",
    BW: "Botswana",
    BV: "Bouvet Island",
    BR: "Brazil",
    IO: "British Indian Ocean Territory",
    BN: "Brunei Darussalam",
    BG: "Bulgaria",
    BF: "Burkina Faso",
    BI: "Burundi",
    CV: "Cabo Verde",
    KH: "Cambodia",
    CM: "Cameroon",
    CA: "Canada",
    KY: "Cayman Islands",
    CF: "Central African Republic",
    TD: "Chad",
    CL: "Chile",
    CN: "China",
    CX: "Christmas Island",
    CC: "Cocos (Keeling) Islands",
    CO: "Colombia",
    KM: "Comoros",
    CG: "Congo",
    CD: "Democratic Republic of the Congo",
    CK: "Cook Islands",
    CR: "Costa Rica",
    CI: "Côte d'Ivoire",
    HR: "Croatia",
    CU: "Cuba",
    CW: "Curaçao",
    CY: "Cyprus",
    CZ: "Czechia",
    DK: "Denmark",
    DJ: "Djibouti",
    DM: "Dominica",
    DO: "Dominican Republic",
    EC: "Ecuador",
    EG: "Egypt",
    SV: "El Salvador",
    GQ: "Equatorial Guinea",
    ER: "Eritrea",
    EE: "Estonia",
    SZ: "Eswatini",
    ET: "Ethiopia",
    FK: "Falkland Islands",
    FO: "Faroe Islands",
    FJ: "Fiji",
    FI: "Finland",
    FR: "France",
    GF: "French Guiana",
    PF: "French Polynesia",
    TF: "French Southern Territories",
    GA: "Gabon",
    GM: "Gambia",
    GE: "Georgia",
    DE: "Germany",
    GH: "Ghana",
    GI: "Gibraltar",
    GR: "Greece",
    GL: "Greenland",
    GD: "Grenada",
    GP: "Guadeloupe",
    GU: "Guam",
    GT: "Guatemala",
    GG: "Guernsey",
    GN: "Guinea",
    GW: "Guinea-Bissau",
    GY: "Guyana",
    HT: "Haiti",
    HM: "Heard Island and McDonald Islands",
    VA: "Holy See",
    HN: "Honduras",
    HK: "Hong Kong",
    HU: "Hungary",
    IS: "Iceland",
    IN: "India",
    ID: "Indonesia",
    IR: "Iran",
    IQ: "Iraq",
    IE: "Ireland",
    IM: "Isle of Man",
    IL: "Israel",
    IT: "Italy",
    JM: "Jamaica",
    JP: "Japan",
    JE: "Jersey",
    JO: "Jordan",
    KZ: "Kazakhstan",
    KE: "Kenya",
    KI: "Kiribati",
    KP: "North Korea",
    KR: "Korea",
    KW: "Kuwait",
    KG: "Kyrgyzstan",
    LA: "Lao People's Democratic Republic",
    LV: "Latvia",
    LB: "Lebanon",
    LS: "Lesotho",
    LR: "Liberia",
    LY: "Libya",
    LI: "Liechtenstein",
    LT: "Lithuania",
    LU: "Luxembourg",
    MO: "Macao",
    MG: "Madagascar",
    MW: "Malawi",
    MY: "Malaysia",
    MV: "Maldives",
    ML: "Mali",
    MT: "Malta",
    MH: "Marshall Islands",
    MQ: "Martinique",
    MR: "Mauritania",
    MU: "Mauritius",
    YT: "Mayotte",
    MX: "Mexico",
    FM: "Micronesia",
    MD: "Moldova",
    MC: "Monaco",
    MN: "Mongolia",
    ME: "Montenegro",
    MS: "Montserrat",
    MA: "Morocco",
    MZ: "Mozambique",
    MM: "Myanmar",
    NA: "Namibia",
    NR: "Nauru",
    NP: "Nepal",
    NL: "Netherlands",
    NC: "New Caledonia",
    NZ: "New Zealand",
    NI: "Nicaragua",
    NE: "Niger",
    NG: "Nigeria",
    NU: "Niue",
    NF: "Norfolk Island",
    MK: "North Macedonia",
    MP: "Northern Mariana Islands",
    NO: "Norway",
    OM: "Oman",
    PK: "Pakistan",
    PW: "Palau",
    PS: "Palestine, State of",
    PA: "Panama",
    PG: "Papua New Guinea",
    PY: "Paraguay",
    PE: "Peru",
    PH: "Philippines",
    PN: "Pitcairn",
    PL: "Poland",
    PT: "Portugal",
    PR: "Puerto Rico",
    QA: "Qatar",
    RE: "Réunion",
    RO: "Romania",
    RU: "Russian Federation",
    RW: "Rwanda",
    BL: "Saint Barthélemy",
    SH: "Saint Helena",
    KN: "Saint Kitts and Nevis",
    LC: "Saint Lucia",
    MF: "Saint Martin (French part)",
    PM: "Saint Pierre and Miquelon",
    VC: "Saint Vincent and the Grenadines",
    WS: "Samoa",
    SM: "San Marino",
    ST: "Sao Tome and Principe",
    SA: "Saudi Arabia",
    SN: "Senegal",
    RS: "Serbia",
    SC: "Seychelles",
    SL: "Sierra Leone",
    SG: "Singapore",
    SX: "Sint Maarten (Dutch part)",
    SK: "Slovakia",
    SI: "Slovenia",
    SB: "Solomon Islands",
    SO: "Somalia",
    ZA: "South Africa",
    GS: "South Georgia and the South Sandwich Islands",
    SS: "South Sudan",
    ES: "Spain",
    LK: "Sri Lanka",
    SD: "Sudan",
    SR: "Suriname",
    SJ: "Svalbard and Jan Mayen",
    SE: "Sweden",
    CH: "Switzerland",
    SY: "Syrian Arab Republic",
    TW: "Taiwan",
    TJ: "Tajikistan",
    TZ: "Tanzania",
    TH: "Thailand",
    TL: "Timor-Leste",
    TG: "Togo",
    TK: "Tokelau",
    TO: "Tonga",
    TT: "Trinidad and Tobago",
    TN: "Tunisia",
    TR: "Turkey",
    TM: "Turkmenistan",
    TC: "Turks and Caicos Islands",
    TV: "Tuvalu",
    UG: "Uganda",
    UA: "Ukraine",
    AE: "United Arab Emirates",
    GB: "UK",
    US: "USA",
    UM: "United States Minor Outlying Islands",
    UY: "Uruguay",
    UZ: "Uzbekistan",
    VU: "Vanuatu",
    VE: "Venezuela",
    VN: "Viet Nam",
    VG: "Virgin Islands (British)",
    VI: "Virgin Islands (U.S.)",
    WF: "Wallis and Futuna",
    EH: "Western Sahara",
    YE: "Yemen",
    ZM: "Zambia",
    ZW: "Zimbabwe",
  };

  const addFlagListeners = () => {
    document.querySelectorAll(".ip .info-container").forEach((flag) => {
      if (flag.getAttribute("listener") !== "true") {
        flag.setAttribute("listener", "true");
        flag.addEventListener("click", () => {
          flag.classList.add("show-tooltip");

          console.log("hi");

          const tooltip = flag.querySelector(".tooltip");
          const countryCode = tooltip
            .getAttribute("data-countryCode")
            .toUpperCase();

          tooltip.innerText = flagMap[countryCode];

          setTimeout(() => {
            flag.classList.remove("show-tooltip");
          }, 600);
        });
      }
    });
  };

  addFlagListeners();

  document.addEventListener("mousemove", (e) => {});

  let loadingPage = false;
  document.addEventListener("DOMContentLoaded", () => {
    setTimeout(() => {
      document.querySelector(".ip-container").classList.remove("invisible");
      window.scrollTo(0, document.body.scrollHeight);
    }, 300);

    const scrollHandler = () => {
      if (reachedEnd) {
        return;
      }

      const scrollPosition = window.scrollY;

      if (scrollPosition < 200) {
        if (!loadingPage) {
          loadingPage = true;
          console.log("loading");
          loadPage();
        }
      }
    };
    window.addEventListener("scroll", scrollHandler);
  });

  let page = 1;
  let reachedEnd = false;
  async function loadPage() {
    const res = await fetch(`/page/${page++}`);
    console.log(res);
    const html = await res.text();

    if (html === "end") {
      reachedEnd = true;
      return;
    }

    // window.scrollTo(0, document.body.scrollHeight);
    console.log("loaded");

    prependNewContent(html);

    loadingPage = false;
  }

  function appendNewContent(newContent) {
    const isAlmostScrolledToBottom =
      window.innerHeight + window.scrollY >= document.body.scrollHeight - 10;

    var contentDiv = document.querySelector(".ip-container");
    contentDiv.insertAdjacentHTML("beforeend", newContent);

    addFlagListeners();
    if (isAlmostScrolledToBottom) {
      window.scrollTo({
        top: document.body.scrollHeight,
        left: 0,
        behavior: "smooth",
      });
    }
  }

  function prependNewContent(newContent) {
    // Adjust the scroll position to keep the user's view where it was
    var scrollTopBefore =
      window.pageYOffset || document.documentElement.scrollTop;

    // Create a temporary container to calculate the height of the new content
    var tempDiv = document.createElement("div");
    tempDiv.innerHTML = newContent;
    tempDiv.style.position = "absolute";
    var contentDiv = document.querySelector(".ip-container");
    contentDiv.appendChild(tempDiv);
    tempDiv.classList.add("ip-container");
    var heightOfNewContent = tempDiv.offsetHeight;
    contentDiv.removeChild(tempDiv);

    console.log(heightOfNewContent, scrollTopBefore);

    // Prepend the new content

    contentDiv.insertAdjacentHTML("afterbegin", newContent);

    addFlagListeners();

    window.scrollTo(0, scrollTopBefore + heightOfNewContent);
  }

  function initWebSocket() {
    // Connect to the WebSocket server
    const ws = new WebSocket("ws://localhost:8080");

    // Handle incoming messages
    ws.onmessage = (event) => {
      const message = JSON.parse(event.data);
      const payload = JSON.parse(message.messageJSON);

      switch (message.action) {
        case "entryAdded":
          appendNewContent(payload.html);
          break;

        case "ping":
          console.log("pong");
          ws.send(JSON.stringify({ action: "pong" }));
        default:
          break;
      }
    };

    // Handle connection open
    ws.onopen = () => {
      console.log("Connected to server");
    };

    // Handle connection close
    ws.onclose = () => {
      console.log("Disconnected from server");

      setTimeout(() => {
        initWebSocket();
      }, 2000);
    };

    // // Send a message when the button is clicked
    // document.getElementById("sendButton").addEventListener("click", () => {
    //   const input = document.getElementById("messageInput");
    //   ws.send(input.value);
    //   input.value = "";
    // });
  }

  initWebSocket();

  function initInfoModal() {
    const infoButton = document.querySelector(".my-info");

    infoButton.addEventListener("click", () => {
      const modal = document.querySelector(".modal-container");
      modal.classList.remove("hidden");
    });

    const modalBackdrop = document.querySelector(".modal-container");
    modalBackdrop.addEventListener("click", (e) => {
      modalBackdrop.classList.add("hidden");
    });

    const modal = document.querySelector(".modal");
    modal.addEventListener("click", (e) => {
      e.stopPropagation();
    });

    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") {
        modalBackdrop.classList.add("hidden");
      }
    });
  }

  initInfoModal();
</script>

<%- include('partials/footer') %>
